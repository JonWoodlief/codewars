pdef traverse_TCP_states(events):
    state = "CLOSED"
    
    closedEvents = {
        "APP_PASSIVE_OPEN": "LISTEN",
        "APP_ACTIVE_OPEN": "SYN_SENT"}
    listenEvents = {
        "RCV_SYN": "SYN_RCVD",
        "APP_SEND": "SYN_SENT",
        "APP_CLOSE": "CLOSED"}
    syn_rcvdEvents = {
        "APP_CLOSE": "FIN_WAIT_1",
        "RCV_ACK": "ESTABLISHED"}
    syn_sentEvents = {
        "RCV_SYN": "SYN_RCVD",
        "RCV_SYN_ACK": "ESTABLISHED",
        "APP_CLOSE": "CLOSED"}
    establishedEvents = {
        "APP_CLOSE": "FIN_WAIT_1",
        "RCV_FIN": "CLOSE_WAIT"}
    fin_wait_1Events = {
        "RCV_FIN": "CLOSING",
        "RCV_FIN_ACK": "TIME_WAIT",
        "RCV_ACK": "FIN_WAIT_2"}
    closingEvents = {
        "RCV_ACK": "TIME_WAIT"}
    fin_wait_2Events = {
        "RCV_FIN": "TIME_WAIT"}
    time_waitEvents = {
        "APP_TIMEOUT": "CLOSED"}
    close_waitEvents = {
        "APP_CLOSE": "LAST_ACK"}
    last_ackEvents = {
        "RCV_ACK": "CLOSED"}
        
    stringToDict = {
        "CLOSED": closedEvents,
        "LISTEN": listenEvents,
        "SYN_RCVD": syn_rcvdEvents,
        "SYN_SENT": syn_sentEvents,
        "ESTABLISHED": establishedEvents,
        "FIN_WAIT_1": fin_wait_1Events,
        "CLOSING": closingEvents,
        "FIN_WAIT_2": fin_wait_2Events,
        "TIME_WAIT": time_waitEvents,
        "CLOSE_WAIT": close_waitEvents,
        "LAST_ACK": last_ackEvents}
      
    for event in events:
        if event in stringToDict[state]:
            state = stringToDict[state][event]
        else:
            return "ERROR"
      
    return state